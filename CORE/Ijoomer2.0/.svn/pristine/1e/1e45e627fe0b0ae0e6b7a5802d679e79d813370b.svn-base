package com.ijoomer.library.jomsocial;

import java.util.ArrayList;
import java.util.HashMap;

import org.json.JSONObject;

import android.content.Context;
import android.os.AsyncTask;

import com.ijoomer.caching.IjoomerCaching;
import com.ijoomer.common.classes.IjoomerPagingProvider;
import com.ijoomer.weservice.IjoomerWebService;
import com.ijoomer.weservice.ProgressListener;
import com.ijoomer.weservice.WebCallListener;

/**
 * This Class Contains All Method Related To JomSocial Activities.
 * 
 * @author tasol
 * 
 */
public class JomActivitiesDataProvider extends IjoomerPagingProvider {
	private Context mContext;

	private final String USER = "user";
	private final String ACTIVITIES = "activities";
	private final String TOTAL_UPDATES = "total_updates";

	/**
	 * Constructor
	 * 
	 * @param context
	 *            represented {@link Context}
	 */
	public JomActivitiesDataProvider(Context context) {
		super(context);
		mContext = context;
	}

	/**
	 * This method used to get activities list.
	 * 
	 * @param target
	 *            represented {@link WebCallListener}
	 */
	public void getActivitiesList(final WebCallListener target) {

		if (hasNextPage()) {

			new AsyncTask<Void, Void, ArrayList<HashMap<String, String>>>() {

				@Override
				protected ArrayList<HashMap<String, String>> doInBackground(Void... params) {
					IjoomerWebService iw = new IjoomerWebService();
					iw.reset();
					iw.addWSParam(EXTNAME, JOMSOCIAL);
					iw.addWSParam(EXTVIEW, USER);
					iw.addWSParam(EXTTASK, ACTIVITIES);

					JSONObject taskData = new JSONObject();
					try {
						taskData.put(PAGENO, getPageNo());
					} catch (Throwable e) {
					}
					iw.addWSParam(TASKDATA, taskData);
					iw.WSCall(new ProgressListener() {

						@Override
						public void transferred(long num) {
							if (num >= 100) {
								target.onProgressUpdate(95);
							} else {
								target.onProgressUpdate((int) num);
							}
						}
					});

					if (validateResponse(iw.getJsonObject())) {
						try {
							setTotalCount(Integer.parseInt(iw.getJsonObject().getString(TOTAL_UPDATES)));
							if (getTotalCount() > getPageLimit()) {
								setTotalPageCount((getTotalCount() / getPageLimit()) + 1);
								setPageCounter(getPageCounter() + 1);
								setPageNo(getPageCounter());
							} else {
								setTotalCount(Integer.parseInt(iw.getJsonObject().getString(TOTAL_UPDATES)));
								setTotalPageCount(1);
								setPageCounter(getPageCounter() + 1);
								setPageNo(getPageCounter());
							}
							iw.getJsonObject().remove(TOTAL_UPDATES);
							return new IjoomerCaching(mContext).parseData(iw.getJsonObject());
						} catch (Throwable e) {
						}
					}
					return null;
				}

				@Override
				protected void onPostExecute(ArrayList<HashMap<String, String>> result) {
					super.onPostExecute(result);
					target.onProgressUpdate(100);
					target.onCallComplete(getResponseCode(), getErrorMessage(), result, null);
				}
			}.execute();
		} else {
			target.onProgressUpdate(100);
			target.onCallComplete(getResponseCode(), getErrorMessage(), null, null);
		}

	}
}
